#!/usr/bin/env ruby

# this script
#
#	* runs composer on the zend framework
#	* builds the coffeescript
#	* copies all of the source code into /opt/whathood
#	* kills any watchers and then restarts them
#

require 'optparse'
load 'libs/ruby/Whathood/Util.rb'

options = {}

OptionParser.new do |opts|
    opts.banner = "Usage: bin/deploy [options]"

    opts.on("--watcher","Deploy watcher upstart script and start it") do |watcher|
        options[:watcher] = watcher
    end
end.parse!

# where's our source code
SRC_DIR = File.expand_path(File.join(File.dirname(__FILE__), ".."))
APP_DIR = "#{SRC_DIR}/app"
# deploy to
DEST_DIR="/opt/whathood";

if options[:watcher]
  init_watcher()
else
  deploy_new_code()
end

exit

BEGIN {
    def deploy_new_code
        puts "*     Building Whathood App\n";
        run_composer()
        run_grunt_coffee()
        copy_to_opt()
        init_watcher()
    end

    def run_composer
        Dir.chdir APP_DIR
        if File.exists? "#{APP_DIR}/composer.phar"
            p "*     composer already exists; no need to install"
        else
            p "*     installing composer"
            `curl -sS https://getcomposer.org/installer | php > /dev/null 2>&1`
        end
        p "*     installing vendor libraries"
        `php composer.phar install > /dev/null 2>&1`
    end

    def run_grunt_coffee

        # make sure we have all the grunt tasks
        p "*     run_grunt_coffee...."
        Dir.chdir SRC_DIR
        system('make grunt')

        # now build our coffeescript files
        p "*     building coffeescript files"
        if !system('grunt coffee')
            abort("unable to run `grunt coffee`")
        end
    end

    def copy_to_opt
        puts "*     copying files from #{SRC_DIR} to #{DEST_DIR}"
        cmd = "rsync -av #{SRC_DIR}/app/ #{DEST_DIR}/app"
        system(cmd)
        `cp #{SRC_DIR}/run-app #{DEST_DIR}`
		puts "*     setting doctrine proxy dest dir to all writeable"
        `mkdir -p #{DEST_DIR}/app/data/DoctrineORMModule`
        `chmod 777 #{DEST_DIR}/app/data/DoctrineORMModule -R`
    end

    def init_watcher
        puts "*     starting whathood watch process"
        `cp -f #{SRC_DIR}/etc/upstart/whwatcher.conf /etc/init`
        `service whwatcher restart`
    end
}
