#!/usr/bin/env perl

use strict;
use warnings;
use FindBin;

my $user=`whoami`;
chomp $user;
unless ( $user eq "root" ) {
   print "must be run as root. Not '$user'\n";
   exit;
}

# current directory
my $DIR=$FindBin::Bin;

# deploy to
my $DEST_DIR="/opt/whathood";
my $SRC_DIR="$DIR/..";

system("killall grunt");

print "\n";
print "Building Whathood App\n";
print "\n";

chdir "$SRC_DIR/app";

print "*     installing composer\n";
`curl -sS https://getcomposer.org/installer | php > /dev/null`;

print "*     installing vendor libraries\n";
`php composer.phar install > /dev/null`;

#
print "*     building grunt\n";
#
## RUN grunt as user
chdir($SRC_DIR);
`sudo -u vagrant make grunt`;

#
print "*     building coffeescript files\n";
#
`sudo -u vagrant grunt coffee`;

#
print "*     making source dir chmod 777\n";
#
`chmod 755 $SRC_DIR -R`;

#
print "*     setting doctrine proxy dir to all writeable\n";
#
`mkdir -p $SRC_DIR/app/data/DoctrineORMModule`;
`chmod 777 $SRC_DIR/app/data/DoctrineORMModule`;

#
print "*     now copy everything to the destination dir\n";
#
`sudo mkdir -p $DEST_DIR`;

#
print "*     copying whathood zend files from $SRC_DIR/app to $DEST_DIR\n";
#
`cp -r $SRC_DIR/ $DEST_DIR`;

print "*     copying over whathood.conf nginx file\n";
`cp -f $SRC_DIR/etc/nginx/whathood.conf /etc/nginx/sites-available/whathood.conf`;
`ln -s /etc/nginx/sites-available/whathood.conf /etc/nginx/sites-enabled/whathood.conf`;

print "*     restarting nginx\n";
`service nginx restart`;

init_grunt_watch($SRC_DIR);
init_grunt_watch($DEST_DIR);

print "done deploy\n";

sub init_grunt_watch {
    my $dir = shift;

    print "*     starting Grunt watch for coffeescript changes in $dir\n";
    chdir($dir);
    system("sudo -u vagrant grunt watch &");
}
