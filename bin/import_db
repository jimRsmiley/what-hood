#!/usr/bin/env perl

use lib 'libs/perl';
use strict;
use warnings;
use File::Glob ':glob';
use Cwd;
use Whathood::Utils;

my $DATA_DIR="data/whathood_db";
my $SCHEMA_DIR="app/scripts/schema";
my $DB_NAME="whathood";
my $DB_BAK_FILE="$DATA_DIR/whathood_data.sql";

my $user=`whoami`;
chomp $user;
unless ( $user eq "vagrant" ) {
   print "must be run as vagrant. Not '$user'\n";
   exit;
}

Whathood::Utils->prompt_user("warning: this will destroy the current db");

rebuild_db();
load_schema();
load_functions();
import_data();

sub load_functions {
    print "*     loading functions\n";
    `./dev-bin/load_sql_functions`;
}

sub load_schema {
    print "*     loading schema\n";
    `bin/doctrine_orm_schema_create | sudo -u postgres psql $DB_NAME`;
    print "*     applying indexes\n";
    `psql -f app/scripts/schema/whathood.indexes.sql $DB_NAME`;
}

sub rebuild_db {
    print "*     rebuild_db\n";
    print "dropping database $DB_NAME if it exists\n";
    `sudo -u postgres dropdb --if-exists $DB_NAME`;
    print "creating user\n";
    `sudo -u postgres dropuser --if-exists $DB_NAME`;
    `sudo -u postgres createuser --superuser $DB_NAME`;
    print "creating database\n";
    `sudo -u postgres createdb $DB_NAME`;
    print "creating postgis extension\n";
    `sudo -u postgres psql -c "CREATE EXTENSION postgis" $DB_NAME`;
    `sudo -u postgres psql -c "CREATE SCHEMA whathood" $DB_NAME`;
}

sub import_data {
    if (! -d $DATA_DIR) { # if the data dir doesn't exist
        print "data dir $DATA_DIR doesn't exist, must clone repo\n";
        clone_data_repo();
    }
    else {
        my $_old_dir = cwd();
        chdir($DATA_DIR);
        my $local_sha = system('git rev-parse HEAD');
        my $remote_sha = system('git rev-parse origin/master');
        if ($local_sha ne $remote_sha) {
            print "git data repos are different; cloning database data\n";
        }
        else {
            print "git db repos are equal, no need to clone\n";
        }
        chdir($_old_dir);
    }

    if(! -e $DB_BAK_FILE) {
        die("FATAL: file $DB_BAK_FILE does not exist");
    }
    print "*     importing db file $DB_BAK_FILE to db $DB_NAME\n";
    `psql -f $DB_BAK_FILE $DB_NAME`;
}

sub clone_data_repo {
    print "deleting previous data directory\n";
    `rm -rf $DATA_DIR`;
    `mkdir -p $DATA_DIR`;
    `git clone https://github.com/jimRsmiley/whathood-data.git $DATA_DIR > /dev/null`;
}
