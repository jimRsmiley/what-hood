<?php 
$styles = '
#no-match-neighborhood {
    color: red;
    height: 25px;
    vertical-align: center
}
';
$this->headStyle()->appendStyle( $styles );

// from ViewModel
$form = $this->form;
$center = $this->center;



$form->setAttribute('action', $this->serverUrl(true) );
$form->setAttribute('class','form-horizontal');

$neighborhoodPolygon    = $form->get('neighborhoodPolygon');
$whathoodUser           = $neighborhoodPolygon->get('whathoodUser');
$currentWhathoodUser    = $this->currentWhathoodUser;

$editable = ( $this->editable != null ) ? $this->editable : false;

if( !$editable ) {

    if( empty( $center ) )
        throw new \InvalidArgumentException('center must be defined in view');

    $neighborhoodPolygon->get('neighborhood')->get('name')->setAttribute('readonly', 'true');
    $neighborhoodPolygon->get('neighborhood')->get('region')->get('name')->setAttribute('readonly', 'true');
    $whathoodUser->get('userName')->setAttribute('readonly','true');
}

$form->prepare();

$partialElementPath = 'whathood/neighborhood/partial_neighborhood_form_element.phtml';
?>

        <?php echo $this->form()->openTag($form);?>
        
        <?php foreach( $form->getMessages() as $message ) : ?>
        
        <div><?=\Zend\Debug\Debug::dump($message,null,false);?></div>
        <?php endforeach; ?>
        
        <?php if( !$editable ) :
            echo $this->partial( $partialElementPath, 
                    array( 'formElement'=> $neighborhoodPolygon->get('neighborhood')->get('name') ) );
            echo $this->formElementerrors($neighborhoodPolygon->get('neighborhood')->get('name'));?>
            
        <?php endif; ?>
        
        <?php 
        /*
         *  USER
         */
        if( !$editable ) :
            echo $this->partial( $partialElementPath, 
                array( 'formElement'=> $whathoodUser->get('userName') ) );
        endif;
        ?>
        
        <?php
        /*
         * SAVE AS A USER
         */
        if( $this->addAsUser ) :
            echo $this->formRow( $form->get('addAsUser') );
        endif;
        ?>
        
        <?php if( $editable ) : 
        /*
         * NEIGHBORHOOD NAME
         */
        echo $this->partial( $partialElementPath, 
                    array( 'formElement'=> $neighborhoodPolygon->get('neighborhood')->get('name') ) ); ?>
            <div id="no-match-neighborhood"></div>
        <?php endif; // if $editable ?>
        
        <?php 
        /*
         * polygonGeoJson
         */
        echo $this->formRow( $form->get('polygonGeoJson') ) . "\n" ?>
            
        <div class='row-fluid'>
            <div class="span12 mapheight" id="map" style='padding: 0; margin: 0'></div>
        </div>


    <?php if( $editable ) : ?>
        <div class='row-fluid'>
            <?php echo $this->formElement($form->get('submit')->setAttribute('class','span6'))?>
        </div>
    <?php endif; ?>
        
    <?php echo $this->form()->closeTag() . "\n"; ?>

    <?php if( $this->isNeighborhoodOwner($neighborhoodPolygon,$currentWhathoodUser) ) : ?>
            <div class="well-large">
                put the neighborhood admin stuff here
            </div>
    <?php endif; ?>
            
    <?php
        echo $this->partial( 'whathood/neighborhood-polygon/partial_vote.phtml',
                array( 'neighborhoodPolygonId' => $neighborhoodPolygon->get('id')->getValue()  ) );
    ?>
<script>
    
/**
 * figure out how to center the map, if lat,lng have been specified, use that,
 * else, try and get the position from the browser, then call setupMap to draw
 * the map
 */
function init() {
   
   var lat          = getURLParameter( 'centerLat');
   var lng          = getURLParameter( 'centerLng');
   var regionName   = getURLParameter( 'region_name' );
   
   if( lat == 'null' || lng == 'null' ) {
        console.log("init(): lat or lng is null, let's geocode region");
        geocoder = new google.maps.Geocoder();
        geocoder.geocode( { 'address': regionName + ", USA"}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                position = results[0].geometry.location;
                setUpMap(position.lat(),position.lng());
            } else {
              console.log("Geocode was not successful for the following reason: " + status);
            }
        });
   } else {
       console.log( "init(); GET supplied lat=" + lat + " lng=" + lng );
       setUpMap(lat,lng);
   }
}


function submitAddForm() {
    
    if( WH.neighborhoodLayer === null ) {
        alert("you must draw a neighborhood to continue");
        return false;
    }
    ;
    var hiddenJson = 'input[name=polygonGeoJson]';
    console.log( 'hiddenJson value ' + $(hiddenJson).val() );
    $(hiddenJson).val( JSON.stringify(WH.getDrawnGeoJson()) );
    console.log( "hidden json val " + $(hiddenJson).val() );
    $('#AddNeighborhood').submit();
}

$('document').ready( function() {
    var editable = Boolean(<?=$editable?>);
    var neighborhoodId = '<?php echo $neighborhoodPolygon->get('id')->getValue() ?>';
    
    var center = [<?=$center?>];
    
    console.log( 'neighborhood form: center:' + center );
    
    var options = {
        cssId: 'map',
        center: center,
        placeCenterMarker: true,
    };
    
    if( neighborhoodId )
        options.geoJsonSrc = '<?=$this->url( 'neighborhood_id', array(
                                    'neighborhood_id'   => $form->get('neighborhoodPolygon')->get('id')->getValue(),
                                    'format'            => 'json'
            ))?>';
                        
    var map = new WhathoodMap( options );
    
    if( editable ) {
        map.addLeafletDraw();
    }
    else {
        map.addWhathoodClick();
    }
    <?php if( $this->neighborhoodNames != null ) : ?>
      
    var availableNeighborhoods = [<?=$this->arrayToDoubleQuoteElementedCSV($neighborhoodNames)?>];
  
    $( "input[name=neighborhood\\[name\\]]" ).autocomplete({
      source: availableNeighborhoods,
      response: function(event, ui) {
            // ui.content is the array that's about to be sent to the response callback.
            if (ui.content.length === 0) {
                $("#no-match-neighborhood").html("You're about to add a brand new neighborhood name!  How exciting, just make sure no other name matches what you're trying to do");
            } else {
                $("#no-match-neighborhood").empty();
            }
        }
    });
    
    <?php endif; ?>
});

</script>
    
