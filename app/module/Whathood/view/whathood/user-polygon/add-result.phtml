<?php 
$styles = '
#no-match-neighborhood {
    color: red;
    height: 25px;
    vertical-align: center
}
';
$this->headStyle()->appendStyle( $styles );

// from ViewModel
$form = $this->form;

$currentWhathoodUser    = $this->currentWhathoodUser;
$centerStr              = $this->center;
$neighborhoodPolygon    = $form->get('neighborhoodPolygon');
$neighborhoodPolygonId  = $neighborhoodPolygon->get('id')->getValue();
$whathoodUser           = $neighborhoodPolygon->get('whathoodUser');

$form->prepare();

$regionName = $neighborhoodPolygon->get('neighborhood')->get('region')->get('name')->getValue();
$neighborhoodName = $neighborhoodPolygon->get('neighborhood')->get('name')->getValue();
$userName = $neighborhoodPolygon->get('whathoodUser')->get('userName')->getValue();

print $regionName;
exit;
?>

<?php
/*
 * Breadcrumbs
 */

echo $this->mybreadcrumbs( array(
                            'regionName' => $regionName, 
                            'neighborhoodName' => $neighborhoodName,
                            'user'  => $userName
));?>

<div>We update the heatmap for <?=$regionName?> every hour.  We'll be including
    your neighborhood then.</div>
        <?php echo $this->form()->openTag($form);?>
        
        
        <?php 
        /*
         * polygonGeoJson
         */
        echo $this->formRow( $form->get('polygonGeoJson') ) . "\n" ?>
            
        <div class='row-fluid'>
            <?=$this->partial('whathood/snippets/partial_whathood_click_notification.phtml');?>
            <div class="span12 mapheight" id="map" style='padding: 0; margin: 0'></div>
        </div>

    <?php echo $this->form()->closeTag() . "\n"; ?>

    <?php 
    
    /*
     * Owner of this NeighborhoodPolygon
     */
    if( $this->isNeighborhoodOwner($neighborhoodPolygon,$currentWhathoodUser) ) : ?>
            <div class="well-large">
                <a href="<?=$this->url('neighborhood_edit',array( 'neighborhoodPolygonId' => $neighborhoodPolygonId ) );?>">
                   Edit This Neighborhood
                </a>
            </div>
    <?php endif; ?>
            
    <?php   
        
    /*
     * COMMENTS
     */
    echo $this->neighborhoodPolygonDisqus($neighborhoodPolygonId);
    ?>
<script>
    
/**
 * figure out how to center the map, if lat,lng have been specified, use that,
 * else, try and get the position from the browser, then call setupMap to draw
 * the map
 */
function init() {
   
   var lat          = getURLParameter( 'centerLat');
   var lng          = getURLParameter( 'centerLng');
   var regionName   = getURLParameter( 'region_name' );
   
   if( lat == 'null' || lng == 'null' ) {
        console.log("init(): lat or lng is null, let's geocode region");
        geocoder = new google.maps.Geocoder();
        geocoder.geocode( { 'address': regionName + ", USA"}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                position = results[0].geometry.location;
                setUpMap(position.lat(),position.lng());
            } else {
              console.log("Geocode was not successful for the following reason: " + status);
            }
        });
   } else {
       console.log( "init(); GET supplied lat=" + lat + " lng=" + lng );
       setUpMap(lat,lng);
   }
}

$('document').ready( function() {
    var neighborhoodId = '<?php echo $neighborhoodPolygon->get('id')->getValue() ?>';
    var centerStr = '<?=$centerStr?>';
    
    var options = {
        cssId: 'map',
        placeCenterMarker: true,
        whathoodOnClick: true
    };
    
    if( centerStr ) {
        options.center = [<?=$centerStr?>];
    }
    
    if( neighborhoodId )
        options.geoJsonSrc = '<?=$this->url( 'neighborhood_id', array(
                                    'neighborhood_id'   => $form->get('neighborhoodPolygon')->get('id')->getValue(),
                                    'format'            => 'json'
            ))?>';
                        
    new NewWhathoodMap( options );

    <?php if( $this->neighborhoodNames != null ) : ?>
      
    var availableNeighborhoods = [<?=$this->arrayToDoubleQuoteElementedCSV($neighborhoodNames)?>];
  
    $( "input[name=neighborhood\\[name\\]]" ).autocomplete({
      source: availableNeighborhoods,
      response: function(event, ui) {
            // ui.content is the array that's about to be sent to the response callback.
            if (ui.content.length === 0) {
                $("#no-match-neighborhood").html("You're about to add a brand new neighborhood name!  How exciting, just make sure no other name matches what you're trying to do");
            } else {
                $("#no-match-neighborhood").empty();
            }
        }
    });
    
    <?php endif; ?>
});

</script>
    
